
-- XCore.Logger.EnableTraceback = false;
--[[
    By default, Lua prints the stack when print to console. If you don't need it, you can turn it off with the above code
    默认情况下，lua在输出log时会打印堆栈，如果不需要，可通过上述代码关闭
]]

-- require('LuaDebuggee').StartDebug('127.0.0.1', 9827) 
--[[
    LuaPerfect debug code. see: https://luaperfect.net/
]]


App = App or {}
App.I18N = CS.TinaX.I18N.XI18N.That

-- init "TinaX Lua Extension" , https://github.com/yomunsam/TinaX.Lua.Extension
requireAsync("Assets.TinaX.LuaExtension.init", function(extension, err)
    if(err ~= nil ) then
        error("init tinax lua extension failed  :" .. err.Message)
    end

    extension.InitAsync("Assets.TinaX.LuaExtension", {
        EnablePackages = {
            TinaXLuaExtensionDefine.VFS,
            TinaXLuaExtensionDefine.UIKit,
        }
    }, function() -- On init finish 
        -- open ui
        XCore.UIKit.OpenUIAsync("mainScreen", function(ui_entity,err)
            if err ~= nil then
                printE("OpenUI \"mainScreen\"failed. " .. err.Message)
            end
        end)
    end)
end)

local Test = require("Assets.App.Lua.UI.test")
Test.Test()

--[[
    Non asynchronous writing of the above code
]]
-- local extension = require("Assets.TinaX.LuaExtension.init");
-- extension.Init("Assets.TinaX.LuaExtension", {
--     EnablePackages = {
--         TinaXLuaExtensionDefine.VFS,
--         -- .....
--     }
-- })


